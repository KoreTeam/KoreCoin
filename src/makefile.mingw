# Copyright (c) 2009-2010 Satoshi Nakamoto
# Distributed under the MIT/X11 software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

USE_UPNP:=0

BOOST_SUFFIX?=-mgw48-mt-s-1_55

INCLUDEPATHS= \
 -I"$(CURDIR)" \
 -I"$(DEPSDIR)/include" \
 -I"/c/deps/boost_1_55_0" \
 -I"/c/deps/bdb/build_unix" \
 -I"/c/deps/openssl-1.0.1g/include" \
 -I"/c/deps/libevent" \
 -I"/c/deps"

LIBPATHS= \
 -L"$(CURDIR)/leveldb" \
 -L"$(DEPSDIR)/lib" \
 -L"/c/deps/boost_1_55_0/stage/lib" \
 -L"/c/deps/bdb/build_unix" \
 -L"/c/deps/openssl-1.0.1g" \
 -L"/c/deps/libevent"

LIBS= \
 -l leveldb \
 -l memenv \
 -l boost_system$(BOOST_SUFFIX) \
 -l boost_filesystem$(BOOST_SUFFIX) \
 -l boost_program_options$(BOOST_SUFFIX) \
 -l boost_thread$(BOOST_SUFFIX) \
 -l boost_chrono$(BOOST_SUFFIX) \
 -l event
 -l db_cxx \
 -l ssl \
 -l crypto

DEFS=-DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -DBOOST_SPIRIT_THREADSAFE
DEBUGFLAGS=-g
CFLAGS=-mthreads -O2 -msse2 -w -Wall -Wextra -Wno-ignored-qualifiers -Wformat -Wformat-security -Wno-unused-parameter $(DEBUGFLAGS) $(DEFS) $(INCLUDEPATHS)
LDFLAGS=-Wl,--dynamicbase -Wl,--nxcompat

TESTDEFS = -DTEST_DATA_DIR=$(abspath test/data)

ifndef USE_UPNP
	override USE_UPNP = -
endif
ifneq (${USE_UPNP}, -)
 INCLUDEPATHS += -I"/d/deps/miniupnpc"
 LIBPATHS += -L"/d/deps/miniupnpc"
 LIBS += -l miniupnpc -l iphlpapi
 DEFS += -DSTATICLIB -DUSE_UPNP=$(USE_UPNP)
endif

LIBS += -l kernel32 -l user32 -l gdi32 -l comdlg32 -l winspool -l winmm -l shell32 -l comctl32 -l ole32 -l oleaut32 -l uuid -l rpcrt4 -l advapi32 -l ws2_32 -l mswsock -l shlwapi

# TODO: make the mingw builds smarter about dependencies, like the linux/osx builds are
HEADERS = $(wildcard *.h)

OBJS= \
    obj/tor/address.o \
    obj/tor/addressmap.o \
    obj/tor/aes.o \
    obj/tor/backtrace.o \
    obj/tor/buffers.o \
    obj/tor/channel.o \
    obj/tor/channeltls.o \
    obj/tor/circpathbias.o \
    obj/tor/circuitbuild.o \
    obj/tor/circuitlist.o \
    obj/tor/circuitmux.o \
    obj/tor/circuitmux_ewma.o \
    obj/tor/circuitstats.o \
    obj/tor/circuituse.o \
    obj/tor/command.o \
    obj/tor/compat.o \
    obj/tor/compat_libevent.o \
    obj/tor/config.o \
    obj/tor/config_codedigest.o \
    obj/tor/confparse.o \
    obj/tor/connection.o \
    obj/tor/connection_edge.o \
    obj/tor/connection_or.o \
    obj/tor/container.o \
    obj/tor/control.o \
    obj/tor/cpuworker.o \
    obj/tor/crypto.o \
    obj/tor/crypto_curve25519.o \
    obj/tor/crypto_format.o \
    obj/tor/curve25519-donna.o \
    obj/tor/di_ops.o \
    obj/tor/directory.o \
    obj/tor/dirserv.o \
    obj/tor/dirvote.o \
    obj/tor/dns.o \
    obj/tor/dnsserv.o \
    obj/tor/entrynodes.o \
    obj/tor/ext_orport.o \
    obj/tor/fp_pair.o \
    obj/tor/geoip.o \
    obj/tor/hibernate.o \
    obj/tor/log.o \
    obj/tor/memarea.o \
    obj/tor/mempool.o \
    obj/tor/microdesc.o \
    obj/tor/networkstatus.o \
    obj/tor/nodelist.o \
    obj/tor/onion.o \
    obj/tor/onion_fast.o \
    obj/tor/onion_main.o \
    obj/tor/onion_ntor.o \
    obj/tor/onion_tap.o \
    obj/tor/policies.o \
    obj/tor/procmon.o \
    obj/tor/reasons.o \
    obj/tor/relay.o \
    obj/tor/rendclient.o \
    obj/tor/rendcommon.o \
    obj/tor/rendmid.o \
    obj/tor/rendservice.o \
    obj/tor/rephist.o \
    obj/tor/replaycache.o \
    obj/tor/router.o \
    obj/tor/routerlist.o \
    obj/tor/routerparse.o \
    obj/tor/routerset.o \
    obj/tor/sandbox.o \
    obj/tor/statefile.o \
    obj/tor/status.o \
    obj/tor/torgzip.o \
    obj/tor/tortls.o \
    obj/tor/tor_util.o \
    obj/tor/transports.o \
    obj/tor/util_codedigest.o \
    obj/tor/korecoin.o \
    obj/x13/fugue.o \
    obj/x13/hamsi.o \
    obj/x13/groestl.o \
    obj/x13/blake.o \
    obj/x13/bmw.o \
    obj/x13/skein.o \
    obj/x13/keccak.o \
    obj/x13/shavite.o \
    obj/x13/jh.o \
    obj/x13/luffa.o \
    obj/x13/cubehash.o \
    obj/x13/echo.o \
    obj/x13/simd.o \
    obj/alert.o \
    obj/version.o \
    obj/checkpoints.o \
    obj/netbase.o \
    obj/addrman.o \
    obj/crypter.o \
    obj/key.o \
    obj/db.o \
    obj/init.o \
    obj/keystore.o \
    obj/main.o \
    obj/miner.o \
    obj/net.o \
    obj/protocol.o \
    obj/bitcoinrpc.o \
    obj/rpcdump.o \
    obj/rpcnet.o \
    obj/rpcmining.o \
    obj/rpcwallet.o \
    obj/rpcblockchain.o \
    obj/rpcrawtransaction.o \
    obj/script.o \
    obj/sync.o \
    obj/util.o \
    obj/wallet.o \
    obj/walletdb.o \
    obj/noui.o \
    obj/kernel.o \
    obj/pbkdf2.o \
    obj/scrypt.o \
    obj/scrypt-x86.o \
    obj/scrypt-x86_64.o 

all: korecoind.exe

LIBS += $(CURDIR)/leveldb/libleveldb.a $(CURDIR)/leveldb/libmemenv.a
DEFS += $(addprefix -I,$(CURDIR)/leveldb/include)
DEFS += $(addprefix -I,$(CURDIR)/leveldb/helpers)
OBJS += obj/txdb-leveldb.o
leveldb/libleveldb.a:
	cd leveldb && $(MAKE) CC=$(CC) CXX=$(CXX) OPT="$(CFLAGS)" TARGET_OS=NATIVE_WINDOWS libleveldb.a libmemenv.a && cd ..
obj/txdb-leveldb.o: leveldb/libleveldb.a

obj/%.o: %.cpp $(HEADERS)
	g++ -c $(CFLAGS) -o $@ $<

obj/tor/%.o: tor/%.c 
	gcc++ -c $(CFLAGS) -o $@ $<

obj/tor/%.o: tor/korecoin.cpp
	$(CXX) -c $(xCXXFLAGS) -MMD -o $@ $<

obj/x13/%.o: x13/%.c
	g++ -c $(CFLAGS) -fpermissive -o $@ $<

obj/scrypt-x86.o: scrypt-x86.S
	$(CXX) -c $(xCXXFLAGS) -MMD -o $@ $<

obj/scrypt-x86_64.o: scrypt-x86_64.S
	$(CXX) -c $(xCXXFLAGS) -MMD -o $@ $<

korecoind.exe: $(OBJS:obj/%=obj/%)
	g++ $(CFLAGS) $(LDFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS)

clean:
	rm -f korecoind.exe
	rm -f obj/*.o
	rm -f obj/*.P
	rm -f obj/tor/*.o
	rm -f obj/tor/*.P
	rm -f obj/x13/*.o
	rm -f obj/x13/*.P
	cd leveldb && $(MAKE) TARGET_OS=NATIVE_WINDOWS clean && cd ..

FORCE:
